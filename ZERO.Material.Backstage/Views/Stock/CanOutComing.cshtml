@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CanOutComing</title>
</head>
<body>
    <div>
        <table id="canOutComingTable" lay-filter="canOutComing"></table>
    </div>
    <div id="tableCellBar" hidden>
        <button type="button" class="layui-btn layui-btn-xs" lay-event="confirmOut">确认出库</button>
    </div>
    <div id="tableTopBar" hidden>
        <button type="button" class="layui-btn layui-btn-normal" lay-event="allConfirmOut">全部确认出库</button>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/layui")
    @Scripts.Render("~/bundles/layui")
    <script>
        layui.use(['table', 'layer', 'form'],
            function () {
                var table = layui.table;
                var form = layui.form;

                var layer = layui.layer;
                var load = layer.load(1);

                /********************************************************** 筛选参数start *********************************************************/

                /********************************************************** 筛选参数end *********************************************************/
                /********************************************************* 时间选择器start *********************************************************/

                /********************************************************* 时间选择器end *********************************************************/
                /*********************************************************** 表格start *********************************************************/
                var tableOption = {
                    elem: "#canOutComingTable",
                    //height: 100 %,
                    url: "GetCanOutComing",
                    loading: true,
                    defaultToolbar: false,
                    cellMinWidth: 50,
                    toolbar: "#tableTopBar",
                    page: true,
                    size: 'lg',
                    limits: [10, 20, 30, 40],
                    text: {
                        none: "未加载到相关数据"
                    },
                    cols: [
                        [
                            { type: 'checkbox', fixed: 'left' },
                            { field: 'Teacher_Id', title: '教师编号', sort: true },
                            { field: 'Teacher_Name', title: '教师姓名' },
                            { field: 'Teacher_Depart', title: '教师系别' },
                            {
                                field: 'Apply_Time',
                                title: '申请时间',
                                sort: true,
                                templet: "<div>{{layui.util.toDateString(d.Apply_Time, 'yyyy-MM-dd ')}}</div>"
                            },
                            {
                                field: 'Start_Time',
                                title: '使用时间',
                                sort: true,
                                templet: "<div>{{layui.util.toDateString(d.Start_Time, 'yyyy-MM-dd ')}}</div>"
                            },
                            {
                                field: 'End_Time',
                                title: '归还时间',
                                sort: true,
                                templet: "<div>{{layui.util.toDateString(d.End_Time, 'yyyy-MM-dd ')}}</div>"
                            },
                            { field: 'Teach_Depart', title: '使用系别' },
                            { field: 'Teach_Field', title: '使用专业' },
                            { field: 'Material_Name', title: '器材名称', event: 'detail' },
                            { field: 'Apply_Count', title: '申请数量' },
                            { field: 'Head', title: "确认出库", toolbar: '#tableCellBar', fixed: 'right' }
                        ]
                    ],
                    done: function (res) {
                        layer.close(load);
                    }
                };
                table.render(tableOption);

                table.on('tool(canOutComing)',
                    function (obj) {
                        var data = obj.data; //获得当前行数据
                        var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）

                        switch (layEvent) {
                            case 'confirmOut':
                                confirmOutComing(new Array(data));
                                break;
                            case 'detail':
                                layer.open({
                                    title: "器材详情",
                                    type: 2,
                                    shadeClose: true,
                                    shade: false,
                                    //                                    maxmin: true, //开启最大化最小化按钮
                                    area: ["100%", "100%"],
                                    content: "../Material/Detail?Material_Id=" + data.Material_Id,
                                    end: function () {
                                        //table.reload("baseTable", tableOption);
                                        //layer.msg("校徽");
                                    }
                                });
                                break;
                        };
                    });

                table.on('toolbar(canOutComing)',
                    function (obj) {
                        var checkStatus = table.checkStatus(obj.config.id);
                        switch (obj.event) {
                            case 'allConfirmOut':
                                confirmOutComing(checkStatus.data);
                        };
                    });
                /*********************************************************** 表格end *********************************************************/

                /*********************************************************** 表单start *********************************************************/
                form.render('select');
                form.on('select(status)',
                    function (obj) {

                    });

                /*********************************************************** 表单end *********************************************************/

                /*********************************************************** 自定义方法start *********************************************************/
                function reloadTable() {
                    table.reload('buyTable',
                        {
                            page: {
                                curr: 1
                            },
                            where: {
                                'status': status
                            }
                        });
                }

                function confirmOutComing(dataList) {
                    var ajaxData = new Array();
                    dataList.forEach(function (dataItem) {
                        ajaxData.push({
                            Apply_Id: dataItem.Apply_Id,
                            ApplyType_Id: dataItem.ApplyType_Id ,
                            Apply_Count: dataItem.Apply_Count,
                            Apply_Status: 0,
                            Apply_Advice: dataItem.Apply_Advice
                         });
                    });

                    $.ajax({
                        url: 'ConfirmOutComing',
                        type: 'POST',
                        data: {"applyInfos":ajaxData},
                        success: function(data) {
                            if (data === "OK") {
                                layer.msg("确认成功");
                                table.reload('canOutComingTable', tableOption);
                            } else {
                                layer.msg("确认失败");
                            }
                        }
                    });
                }

                String.prototype.format = function (args) {
                    var result = this;
                    if (arguments.length > 0) {
                        if (arguments.length == 1 && typeof args == "object") {
                            for (var key in args) {
                                if (args[key] != undefined) {
                                    var reg = new RegExp("({" + key + "})", "g");
                                    result = result.replace(reg, args[key]);
                                }
                            }
                        } else {
                            for (var i = 0; i < arguments.length; i++) {
                                if (arguments[i] != undefined) {
                                    //var reg = new RegExp("({[" + i + "]})", "g");//这个在索引大于9时会有问题，谢谢何以笙箫的指出

                                    var reg = new RegExp("({)" + i + "(})", "g");
                                    result = result.replace(reg, arguments[i]);
                                }
                            }
                        }
                    }
                    return result;
                };
                /*********************************************************** 自定义方法end *********************************************************/
            })
    </script>
</body>
</html>